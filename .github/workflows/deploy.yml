# eXo iOS application continuous deployment to Appaloosa.

# Required Github secrets:

# - SSH_KEY: Private SSH Key to allow accessing to a private Github repository.
# - KNOWN_HOSTS: Known hosts containing Github servers fingerprints. Can be taken from existing one or Generate a one https://github.community/t/please-provide-ssh-known-hosts-for-gh-services-in-actions/16164/3.
# - MATCH_PASSWORD: Certificate's password
# - KEYCHAIN_PASSWORD: Keychain Password (Generate a random secure password)
# - MATCH_KEYCHAIN_NAME: Keychain Name (Generate a random name)
# - API_TOKEN_APPALOOSA: Appaloosa Store api token
# - STORE_ID_APPALOOSA: Appaloosa Store id

name: eXo iOS Beta Appaloosa CI/CD

on:
  push:
    branches: [develop, acceptance, cert2023]
jobs:
  deploy:
    runs-on: macos-11
    timeout-minutes: 60
    # Skip deployment triggered by a rebase action or technical commits
    if: "!contains(github.event.pusher.name, 'exo-swf') || contains(github.event.head_commit.message, 'Merge Translations')"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Xcode 13
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '13.2'
      - name: init commit
        run: |
          git config --global user.email "exo-swf@exoplatform.com"
          git config --global user.name "eXo Software Factory"
      # Use SSH Key to gather certificate from a private Github repository. Use a dedicated on is recommended.
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.EXO_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
      # Setup Ruby 2.6 (2.7 not yet compatible with bundler)
      - name: Setup ruby 2.6
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6
      # Install Bundler and dependencies gems
      - name: Install bundler and dependencies
        run: gem install bundler && bundle install
      # Needed to install these packages for fastlane to generate badges
      #- name: Install Homebrew badge packages
      #  run: brew install librsvg imagemagick graphicsmagick
      # Ensure installing latest version of fastlane
      - name: Upgrade fastlane
        run: bundle update fastlane
      # Gather certificates from Github repository
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3.11
